name: Build and Push Docker Images

# dev 브랜치에 push 될때 작동
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  CURRENT_VERSION: "0.1.0"

jobs:
  build-image-and-push:
    runs-on: ubuntu-latest
    # 권한을 read로 제한
    permissions:
      contents: read
    # jdk 17 설정
    steps:
      - uses: actions/checkout@v4
      # Github Secret to .env
      - name: Create .env file
        run: |
          echo DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }} >> .env
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
      # gradle 설정
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3.1.0
      # ./gradlew 권한 부여
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      # 테스트 없이 빌드
      - name: Build with Gradle
        run: ./gradlew build -x test
          
      - name: Docker Login
        uses: docker/login-action@v2
        with:
           username: ${{ secrets.DOCKERHUB_USERNAME }}
           password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/kukerton:latest

      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.APPLICATION_NAME }}
          environment_name: ${{ secrets.ENVIRONMENT_NAME }}
          version_label: kukerton-${{steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2
          deployment_package: docker-compose.yml
          wait_for_environment_recovery: 60

